///////////////////////////////////////////////////////////////////////////////
/******************************************************************************
	Project		ZMediaServer
	ZLog		Header File
	Create		20100708		ZHAOTT
	Modify		20120217		ZHAOTT		log path
******************************************************************************/
///////////////////////////////////////////////////////////////////////////////
#ifndef	_ZLOG_H_
#define	_ZLOG_H_
///////////////////////////////////////////////////////////////////////////////
#include	"public.h"
///////////////////////////////////////////////////////////////////////////////
class	ZOSMutex;
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
#define	DECLARE_LOG(logpath,loglevel)		ZLog	thelog(logpath,loglevel);
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class ZLog
{
///////////////////////////////////////////////////////////////////////////////
public:	
	typedef enum _LOG_LEVEL_
	{
		LOG_ERROR		= 1,
		LOG_WARNING		= 2,
		LOG_INFORMATION	= 3,
		LOG_DEBUG		= 4
	}LOG_LEVEL;
///////////////////////////////////////////////////////////////////////////////
public:
	ZLog();
	ZLog(const char* sLogPath,const int nLogLevel);
	~ZLog();
///////////////////////////////////////////////////////////////////////////////
public:
	void				Logout(const char* sFormat,...);
	void				LOGError(const char* sFormat,...);
	void				LOGWarning(const char* sFormat,...);
	void				LOGInfo(const char* sFormat,...);
	void				LOGDebug(const char* sFormat,...);
	void				MessageOut(const char* sFormat,...);
    void                SetStackInfo(const char *sFile, const char *sFunction, int nLine);
///////////////////////////////////////////////////////////////////////////////
protected:
	int					OpenLogFile(const char* sFileName);
	int					CloseLogFile();
	int					CheckLogFile(LOG_LEVEL eLogLevel = LOG_INFORMATION);
///////////////////////////////////////////////////////////////////////////////
protected:
	char				m_sFileName[MAX_FILE_NAME+4];
	int					m_nLogFile;
	FILE*				m_hFile;
    BOOL                m_bSingleLoop;
    int                 m_nLoopThresholdSize;
    char                m_sFixName[MAX_FILE_PATH+4];
    char                m_sStackInfoFile[256+4];
    char                m_sStackInfoFunction[256+4];
    int                 m_nStackInfoLine;
///////////////////////////////////////////////////////////////////////////////
protected:
	static	ZOSMutex*	m_pLogMutex;
	static	char		m_sFilePath[MAX_FILE_PATH+4];
	static	int			m_nLogLevel;
///////////////////////////////////////////////////////////////////////////////
public:
	static	char*		GetLogPath();
	static	int			GetLogLevel();
	static	void		SetLogPath(const char* sLogPath);
	static	void		SetLogLevel(int nLogLevel);
    void SetSingleLoop(BOOL bLoop);
    void SetLoopThreshold(int nThresholdSize);
    void SetFixName(const char* sLogName);
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
#endif	//_ZLOG_H_
///////////////////////////////////////////////////////////////////////////////
