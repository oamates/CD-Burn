///////////////////////////////////////////////////////////////////////////////
/******************************************************************************
	Project		ZMediaServer
	ZOSMemory	Header File
	Create		20100722		ZHAOTT
	Modify		20110711		ZHAOTT
******************************************************************************/
///////////////////////////////////////////////////////////////////////////////
#ifndef	_ZOSMEMORY_H_
#define	_ZOSMEMORY_H_
///////////////////////////////////////////////////////////////////////////////
#include "Common.h"
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class ZOSMemory
{
///////////////////////////////////////////////////////////////////////////////
public:
	static	void*	New(size_t nSize);
	static	void	Delete(void* pMemory);
///////////////////////////////////////////////////////////////////////////////
public:
#ifdef _DEBUG_
#if	defined(_WIN32_)
	static	void	CheckBegin();
	static	void	CheckEnd();
#endif	//_WIN32_
#endif	//_DEBUG_
///////////////////////////////////////////////////////////////////////////////
};
#ifdef	NEW
#error "NEW" ERROR
#endif	//NEW
#ifdef	DEL
#error "DEL" ERROR
#endif	//DEL
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
#define	NEW			new
#define	DEL			delete
///////////////////////////////////////////////////////////////////////////////
#ifdef REDEFINE_NEW
///////////////////////////////////////////////////////////////////////////////
void*	operator	new(size_t,void* ptr);
///////////////////////////////////////////////////////////////////////////////
void*	operator	new (size_t s);
void*	operator	new[](size_t s);
///////////////////////////////////////////////////////////////////////////////
void	operator	delete(void* mem);
void	operator	delete[](void* mem);
///////////////////////////////////////////////////////////////////////////////
inline	void* operator new(size_t,void* ptr)
{
	return ptr;
}
inline	void* operator new(size_t s)
{
	return ZOSMemory::New(s);
}
inline	void* operator new[](size_t s)
{
	return ZOSMemory::New(s);
}
inline	void operator delete(void* mem)
{
	ZOSMemory::Delete(mem);
}
inline	void operator delete[](void* mem)
{
	ZOSMemory::Delete(mem);
}
#endif
///////////////////////////////////////////////////////////////////////////////
#endif	//_ZOSMEMORY_H_
///////////////////////////////////////////////////////////////////////////////
