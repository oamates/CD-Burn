///////////////////////////////////////////////////////////////////////////////
/******************************************************************************
	Project			ZMediaServer
	ZAuthorization	Header File
	Create			20121205		ZHAOTT
******************************************************************************/
///////////////////////////////////////////////////////////////////////////////
#ifndef	_ZAUTHORIZATION_H_
#define	_ZAUTHORIZATION_H_
///////////////////////////////////////////////////////////////////////////////
#include "Common.h"
#include "ZAuth.h"
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class ZAuthorization : public ZAuth
{
///////////////////////////////////////////////////////////////////////////////
public:
	ZAuthorization();
	virtual	~ZAuthorization();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL		Authorization();
	virtual	BOOL		Authentication();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	AUTH_TYPE	GetAuthType();
	virtual	AUTH_TYPE	SetAuthType(AUTH_TYPE nType);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL		GetAuthData(CHAR* sAuth,UINT* nAuth);
	virtual	BOOL		CheckAuthData(CHAR* sAuth,UINT nAuth);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL		SetUserNamePassword(CHAR* sUser,CHAR* sPassword);
	virtual	BOOL		SetRealmNonce(CHAR* sRealm,CHAR* sNonce);
	virtual	BOOL		SetMethodURL(CHAR* sMethod,CHAR* sURL);
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual	BOOL		GetBasicAuthentication();
	virtual	BOOL		GetDigestAuthentication();
///////////////////////////////////////////////////////////////////////////////
protected:
	CHAR				m_sUser[MAX_KEY_LABEL+4];
	CHAR				m_sPassword[MAX_KEY_LABEL+4];
///////////////////////////////////////////////////////////////////////////////
protected:
	CHAR				m_sAuthorizationRealm[MAX_KEY_LABEL+4];
	CHAR				m_sAuthorizationNonce[MAX_KEY_LABEL+4];
	CHAR				m_sAuthenticationMethod[MAX_KEY_LABEL+4];
	CHAR				m_sAuthenticationURL[MAX_KEY_LABEL+4];
///////////////////////////////////////////////////////////////////////////////
protected:
	BOOL				m_bAuthorizationFlag;
	BOOL				m_bAuthenticationFlag;
	AUTH_TYPE			m_nAuthorizationType;
	CHAR				m_sAuthorizationData[MAX_MESSAGE_DATA+4];
///////////////////////////////////////////////////////////////////////////////
protected:
	typedef	struct	_AUTHORIZATION_SEED_
	{
		UINT64	nTime;
		UINT64	nCount;
	}AUTHORIZATION_SEED;
	AUTHORIZATION_SEED	m_AuthorizationSeedData;
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
#endif	//_ZAUTHORIZATION_H_
///////////////////////////////////////////////////////////////////////////////
