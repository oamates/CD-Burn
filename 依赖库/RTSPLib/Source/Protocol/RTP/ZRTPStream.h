///////////////////////////////////////////////////////////////////////////////
/******************************************************************************
	Project			ZMediaServer
	ZRTPStream		Header File
	Create			20100811		ZHAOTT		RTP
	Modify			20110608		ZHAOTT		RTCP
	Modify			20110706		ZHAOTT		RTP OVER RTSP
	Modify			20120302		ZHAOTT		ZOSPOOL
******************************************************************************/
///////////////////////////////////////////////////////////////////////////////
#ifndef	_ZRTPSTREAM_H_
#define	_ZRTPSTREAM_H_
///////////////////////////////////////////////////////////////////////////////
#include "Common.h"
#include "ZOSPool.h"
#include "ZDataPin.h"
#include "ZRTPPacket.h"
#include "ZRTCPPacket.h"
#include "ZOSObjectTable.h"
///////////////////////////////////////////////////////////////////////////////
class	ZOSHeap;
class	ZTCPSocket;
class	ZUDPSocket;
class	ZUDPSocketPair;
class	ZDataInOut;
class	ZRTPSession;
class	ZRTSPSession;
class	ZRTPPacket;
class	ZRTCPPacket;
class	ZRTCPTask;
class	ZRTSPRequest;
class	ZRTSPResponse;
class	ZRTPStream;
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class ZRTPStream : public ZDataInOut
{
///////////////////////////////////////////////////////////////////////////////
public:
	ZRTPStream(ZRTPSession* pRTPSession,ZDataOut* pInputDataPin = NULL);
	virtual ~ZRTPStream();
///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////
public:
	ZOSObject*		GetObject();
///////////////////////////////////////////////////////////////////////////////
public:
	int				GetTransport();
	int				GetLocalPortA();
	int				GetLocalPortB();
    UINT64          GetTotalPacketCount();
    UINT64          GetLostPacketCount();
public:
    double          RTPPoolUsePercent();
///////////////////////////////////////////////////////////////////////////////
public:
	void			SetTransport(int nTransport);
	void			SetRemotePort(int nPortA,int nPortB);
	void			SetChannel(int nChannelA,int nChannelB);
    void            GetChannel(int *pnChannelA, int *pnChannelB);

    DWORD           GetServerSSRC();
///////////////////////////////////////////////////////////////////////////////
//ZDataInOut
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	OnCommand(int nCommand);
	virtual	BOOL	OnHeader(int nFlag,void* pHeader,int nHeader);
	virtual	BOOL	OnData(int nFlag,void* pData,int nData);
///////////////////////////////////////////////////////////////////////////////
//ZRTPStream
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	OnRecvRTPPacket();
	virtual	BOOL	OnRecvRTCPPacket();
	virtual	BOOL	OnSendRTPPacket();
	virtual	BOOL	OnSendRTCPPacket();
///////////////////////////////////////////////////////////////////////////////
//Setup
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	SetupServerStream(ZRTSPRequest* pRTSPRequest,int nRtpSize);
	virtual BOOL	SetupServerStreamMulticast(CHAR *sMultiIP, int nPortA, int nPortB, int nRtpSize);
	virtual	BOOL	SetupClientStream(ZRTSPRequest* pRTSPRequest);
	virtual	BOOL	SetupClientStreamMulticast(ZRTSPRequest* pRTSPRequest,DWORD nAddr,DWORD nPort);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	Pause();
	virtual	BOOL	Resume();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	OnRecvRTPData(int nFlag,void* pData,int nData);
	virtual	BOOL	OnRecvRTCPData(int nFlag,void* pData,int nData);
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual	BOOL	OnProcessPacket(ZRTPPacket* pPacket);
	virtual	BOOL	OnProcessPacket(ZRTCPPacket* pPacket);
///////////////////////////////////////////////////////////////////////////////
private:
	ZRTPSession*		m_pSession;
///////////////////////////////////////////////////////////////////////////////
private:
	ZUDPSocketPair*		m_pUDPSocketPair;
	ZRTCPTask*			m_pRTCPTask;
	ZRTPPacket*			m_pRTPPacket;
///////////////////////////////////////////////////////////////////////////////
private:
	ZOSMutex				m_RTPPacketMutex;
	ZOSPool<ZRTPPacket>		m_RTPPacketPool;
	ZOSMutex				m_RTCPPacketMutex;
	ZOSPool<ZRTCPPacket>	m_RTCPPacketPool;
	BOOL					m_bStreamPackets;
	BOOL					m_bServerStream;
	ZOSObject				m_StreamObject;
///////////////////////////////////////////////////////////////////////////////
private:
	DWORD				m_nServerSSRC;
	DWORD				m_nClientSSRC;
///////////////////////////////////////////////////////////////////////////////
private:
	DWORD				m_nSequence;
	DWORD				m_nLastTimestamp;
private:
    DWORD               m_nLastRecvPacket;
private:
    //used for SR packet
    DWORD               m_nLastRTPTimestamp;
    DWORD               m_nLastNTPMSW;
    DWORD               m_nLastNTPLSW;
    BOOL                m_bFirstSRSend;
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
private:
	int					m_nTransport;
	int					m_nRemoteAddr;
	int					m_nRemotePortA;
	int					m_nRemotePortB;
	int					m_nChannelA;
	int					m_nChannelB;
private:
    UINT64              m_nTotalPacketCount;
    UINT64              m_nLostPacketCount;
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
public:
	friend	class		ZRTPSession;
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
#endif	//_ZRTPSTREAM_H_
///////////////////////////////////////////////////////////////////////////////
