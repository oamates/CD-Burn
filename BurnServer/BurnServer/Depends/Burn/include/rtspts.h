#ifndef	_RTSPTS_
#define	_RTSPTS_
#include "ZMediaTS.h"
#ifdef ARM_LINUX
#include "ChnsysRTSP.h"
#else
#include "ChnsysRTSP_fan.h"
#endif
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
#include <stdio.h>
#ifdef	WIN32
#include <windows.h>
#else
#include <pthread.h>
#include <memory.h>
#endif	//WIN32
///////////////////////////////////////////////////////////////////////////////
#define	RTSP_STRERAM_MAX	2
#define	RTSP_CLIENT_MAX		4
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

typedef	struct	_RTSPTS_MEDIA_
{
	unsigned int	gMediaTSAudioStream;
	unsigned int	gMediaTSVideoStream;
	unsigned int	gMediaRTSPAudioStream;
	unsigned int	gMediaRTSPVideoStream;
	UINT64			gMediaRTSPAudioTime;
	UINT64			gMediaRTSPVideoTime;
}RTSPTS_MEDIA;
///////////////////////////////////////////////////////////////////////////////
typedef	struct	_RTSPTS_HANDLE_
{
	ZMEDIATS*				gMediaTSInstance;
	char					gMediaName[1024];
	FILE*					gMediaHandle;
	unsigned int			gMediaProgram;
	RTSPTS_MEDIA			gMediaData[RTSP_CLIENT_MAX];
	RTSP_CLIENT_HANDLE		gRTSPClient[RTSP_CLIENT_MAX];
	RTSP_CLIENT_CONFIG		gRTSPClientConfig[RTSP_CLIENT_MAX];
#ifdef	WIN32
	CRITICAL_SECTION		gSection;
#else
	pthread_mutex_t			gMutex;
#endif	//WIN32
}RTSPTS_HANDLE;
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
int			rtsptssetcallback(FILEOPEN,FILEREAD,FILEWRITE,FILECLOSE);
///////////////////////////////////////////////////////////////////////////////
int			rtsptsinitialization(RTSPTS_HANDLE* pHandle);
int			rtsptsuninitialization(RTSPTS_HANDLE* pHandle);
///////////////////////////////////////////////////////////////////////////////
int			rtsptsopen(RTSPTS_HANDLE* pHandle,const char* surl);
int			rtsptsclose(RTSPTS_HANDLE* pHandle,const char* surl);
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
#endif	//_RTSPTS_
