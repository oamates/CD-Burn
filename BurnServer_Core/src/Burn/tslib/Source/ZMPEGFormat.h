///////////////////////////////////////////////////////////////////////////////
/******************************************************************************
	Project				ZMediaServer
	ZMPEGFormat			Header File
	Create				20120409		ZHAOTT		ZMedia
******************************************************************************/
///////////////////////////////////////////////////////////////////////////////
#ifndef	_ZMPEGFORMAT_H_
#define	_ZMPEGFORMAT_H_
///////////////////////////////////////////////////////////////////////////////
#include "TSMedia.h"
#include "ZOSMutex.h"
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class	ZMPEGPacket;
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
//MPEG TYPE//ISO_IEC_13818-1-Table 2-29 ¨C Stream type assignments
///////////////////////////////////////////////////////////////////////////////
#define	MPEG_TYPE_UNKNOWN			0x00	//ITU-T | ISO/IEC Reserved
#define	MPEG_VIDEO_MPEG1			0x01	//ISO/IEC 11172 Video
#define	MPEG_VIDEO_MPEG2			0x02	//ITU-T H.262 | ISO/IEC 11172-2/13818-2 Video 
#define	MPEG_AUDIO_MPEG1			0x03	//ISO/IEC 11172 Audio
#define	MPEG_AUDIO_MPEG2			0x04	//ISO/IEC 13818-3 Audio
#define	MPEG_PRIVATE_SECTION		0x05	//ITU-T H.222.0 | ISO/IEC 13818-1 Private
#define	MPEG_PRIVATE_DATA			0x06	//ITU-T H.222.0 | ISO/IEC 13818-1 Private
#define	MPEG_AUDIO_MPEG2_AAC		0x0F	//ISO/IEC 13818-7 Audio
#define	MPEG_VIDEO_MPEG4			0x10	//ISO/IEC 14496-2 Visual
#define	MPEG_AUDIO_MPEG4			0x11	//ISO/IEC 14496-3 Audio
#define	MPEG_PES_STREAM				0x12	//ISO/IEC 14496-1 Stream
#define	MPEG_VIDEO_H264				0x1B	//ITU-T H.222.0 | ISO/IEC 13818-1 (H264/AVC)
#define	MPEG_AUDIO_A52				0x81	//User Private(A52)
#define	MPEG_SUBTITLE_DVD			0x82	//User Private(DVD Subtitle)
#define	MPEG_AUDIO_LPCM				0x83	//User Private(LPCM)
#define	MPEG_AUDIO_SDDS				0x84	//User Private(SDDS)
#define	MPEG_AUDIO_DTS				0x85	//User Private(DTS)
#define	MPEG_DATA_PRIVATE			0xA0	//User Private(Video)
#define	MPEG_VIDEO_VC1				0xEA	//User Private(VC-1)
#define	MPEG_SUBTITLE_DVB			0x100	//User Private(DVB Subtitle)
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class ZMPEGFormat : public TSMedia
{
///////////////////////////////////////////////////////////////////////////////
public:
	ZMPEGFormat();
	virtual	~ZMPEGFormat();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL			Open(CONST CHAR* sURL);
	virtual	BOOL			Create(CONST CHAR* sURL);
	virtual	BOOL			Close();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	UINT			GetProgramCount();
	virtual	UINT			GetProgramID(UINT nIndex);
	virtual	UINT			GetStreamCount(UINT nPID);
	virtual	UINT			GetStreamID(UINT nPID,UINT nIndex);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	UINT			AddProgram();
	virtual	UINT			DelProgram(UINT nPID);
	virtual	UINT			AddStream(UINT nPID,VOID* pHeader);
	virtual	UINT			DelStream(UINT nPID,UINT nSID);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	UINT			ReadSample(UINT nSID,VOID* pSample);
	virtual	UINT			WriteSample(UINT nSID,VOID* pSample);
///////////////////////////////////////////////////////////////////////////////
protected:
	BOOL					MPEGPacket();
///////////////////////////////////////////////////////////////////////////////
protected:
	UINT					ReadData();
	UINT					WriteHeader();
	UINT					WriteData();
///////////////////////////////////////////////////////////////////////////////
protected:
	DWORD					AllocatePID(TSMEDIA_TYPE nMediaType);
	DWORD					AllocateID();
///////////////////////////////////////////////////////////////////////////////
protected:
	ZMPEGPacket*			m_pMPEGPacket;
///////////////////////////////////////////////////////////////////////////////
protected:
	UINT					m_nProgramePID;
	UINT					m_nProgrameID;
	UINT					m_nElementPID;
///////////////////////////////////////////////////////////////////////////////
public:
	STATIC	BOOL			MPEGHDVideo(UINT nType);
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
#endif	//_ZMPEGFORMAT_H_
///////////////////////////////////////////////////////////////////////////////
