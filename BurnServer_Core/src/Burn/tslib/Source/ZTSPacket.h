///////////////////////////////////////////////////////////////////////////////
/******************************************************************************
	Project				ZMediaServer
	ZTSPacket			Header File
	Create				20120409		ZHAOTT		ZMedia
******************************************************************************/
///////////////////////////////////////////////////////////////////////////////
#ifndef	_ZTSPACKET_H_
#define	_ZTSPACKET_H_
///////////////////////////////////////////////////////////////////////////////
#include "TSMedia.h"
#include "ZMPEGPacket.h"
///////////////////////////////////////////////////////////////////////////////
class	ZTSPacket;
class	ZPATable;
class	ZPMTable;
///////////////////////////////////////////////////////////////////////////////
#define	DEFAULT_TS_PID_MAX			(8192)	//0x2000
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class ZTSPacket : public ZMPEGPacket
{
///////////////////////////////////////////////////////////////////////////////
public:
typedef	struct	_TS_PID_TABLE_
{
	DWORD			m_nPID;
	DWORD			m_nTID;
	BOOL			m_bPSI;
	BOOL			m_bInit;
	BOOL			m_bPCR;
	BOOL			m_bSeen;
	LPVOID			m_pData;
}TS_PID_TABLE,*PTS_PID_TABLE;
///////////////////////////////////////////////////////////////////////////////
public:
	ZTSPacket();
	virtual ~ZTSPacket();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	UINT		GetProgramNumber();
	virtual	UINT		GetProgramPID(UINT nIndex);
	virtual	UINT		GetProgramID(UINT nIndex);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	UINT		GetStreamNumber(UINT nProgramPID);
	virtual	UINT		GetStreamPID(UINT nProgramPID,UINT nIndex);
	virtual	UINT		GetStreamID(UINT nProgramPID,UINT nIndex);
	virtual	UINT		GetStreamType(UINT nProgramPID,UINT nIndex);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	UINT		AddProgram(UINT	nProgramePID,UINT nProgramID);
	virtual	UINT		DeleteProgram(UINT nProgramPID);
	virtual	UINT		AddStream(UINT nProgramPID,UINT nStreamPID,UINT nStreamType,UINT nStreamID);
	virtual	UINT		DeleteStream(UINT nProgramPID,UINT nStreamPID);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	UINT		ReadSample(UINT nSID,CHAR* sBuffer,UINT* nLength,UINT64* nPTS,UINT64* nDTS);
	virtual	UINT		WriteSample(UINT nSID,CHAR* sBuffer,UINT nLength,UINT64 nPTS,UINT64 nDTS);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL		CheckPacket(char* sdata,int ndata);
	virtual	BOOL		ParsePacket(char* sdata,int ndata);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL		WritePacket(char* sdata,int ndata);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	VOID		Release();
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual	BOOL		ParseSection(TS_PID_TABLE* pTable,char* sdata,int ndata);
	virtual	BOOL		ParseStream(TS_PID_TABLE* pTable,char* sdata,int ndata);
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual	BOOL		WriteSection(TS_PID_TABLE* pTable,char* sdata,int ndata);
	virtual	BOOL		WriteStream(TS_PID_TABLE* pTable,char* sdata,int ndata);
///////////////////////////////////////////////////////////////////////////////
protected:
	BOOL				InitPIDTables();
	BOOL				UnInitPIDTables();
	BOOL				SeePIDTables();
	BOOL				InitPIDTable(DWORD nPID,BOOL bPSI,UINT nType,UINT nExternID);
	BOOL				UnInitPIDTable(DWORD nPID);
///////////////////////////////////////////////////////////////////////////////
protected:
	BOOL				AddPIDTable(TS_PID_TABLE* pTable);
	BOOL				AddPMTTable(UINT nProgramID,UINT nProgramPID);
	BOOL				AddESDTable(UINT nESPID,UINT nESType,UINT nESID,UINT nProgrameID,UINT nStreamPID);
	UINT				AddESData(UINT nESPID,CHAR* sESDATA,UINT nESDATA,UINT64 nESPTS,UINT64 nESDTS);
///////////////////////////////////////////////////////////////////////////////
protected:
	BOOL				FillPIDTable(TS_PID_TABLE* pTable);
	BOOL				FillPMTTable(ZPATable* pTable);
	BOOL				FillESDTable(ZPMTable* pTable);
///////////////////////////////////////////////////////////////////////////////
protected:
	DWORD				CheckPIDTables();
	DWORD				CheckPIDTable(TS_PID_TABLE* pTable);
///////////////////////////////////////////////////////////////////////////////
protected:
	DWORD				GetPID(char* sdata,int ndata);
	DWORD				SetPID(char* sdata,int ndata,DWORD nPID);
///////////////////////////////////////////////////////////////////////////////
protected:
	TS_PID_TABLE*		GetPIDTable(DWORD nPID);
///////////////////////////////////////////////////////////////////////////////
protected:
	BOOL				m_bTopField;
	DWORD				m_nPacketStart;
	DWORD				m_nPacketSkip;
	DWORD				m_nPacketSize;
///////////////////////////////////////////////////////////////////////////////
protected:
	DWORD				m_nPacketPID;
	TS_PID_TABLE		m_PIDTables[DEFAULT_TS_PID_MAX];
	DWORD				m_nPacketPIDMax;
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
#endif	//_ZTSPACKET_H_
///////////////////////////////////////////////////////////////////////////////
