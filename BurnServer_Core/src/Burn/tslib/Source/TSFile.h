///////////////////////////////////////////////////////////////////////////////
/******************************************************************************
	Project				ZMediaServer
	TSFile				Header File
	Create				20120302		ZHAOTT		read support
******************************************************************************/
///////////////////////////////////////////////////////////////////////////////
#ifndef	_ZTSFILE_H_
#define	_ZTSFILE_H_
///////////////////////////////////////////////////////////////////////////////
#include "ZOSFile.h"
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
//Virtual File IO Interface
///////////////////////////////////////////////////////////////////////////////
/*																			*/
/*	FILEOPEN																*/
/*	FILEREAD/FILEWRITE														*/
/*	FILECLOSE																*/
/*																			*/
///////////////////////////////////////////////////////////////////////////////
#define	ZFILE	UINT
///////////////////////////////////////////////////////////////////////////////
typedef	ZFILE*	(* FILEOPEN)(const char*,const char*);			//fopen
typedef	ZFILE	(* FILEREAD)(void*,ZFILE,ZFILE,ZFILE*);			//fread
typedef	ZFILE	(* FILEWRITE)(const void*,ZFILE,ZFILE,ZFILE*);	//fwrite
typedef	int		(* FILECLOSE)(ZFILE*);							//fclose
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class TSFile
{
///////////////////////////////////////////////////////////////////////////////
public:
	TSFile();
	virtual	~TSFile();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	Open(CONST CHAR* sURL);
	virtual	BOOL	Create(CONST CHAR* sURL);
	virtual	BOOL	Close();
///////////////////////////////////////////////////////////////////////////////
public:
	UINT64			GetTime();
	UINT64			SetTime(UINT64 nTime);
	UINT64			GetDuration();
	UINT32			GetTimeScale();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	UINT64	Read(VOID* sData,UINT64 nData);
	virtual	UINT64	Write(VOID* sData,UINT64 nData);
	virtual	UINT64	Seek(UINT64 nSeek);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	UINT64	GetPosition();
	virtual	UINT64	GetSize();
///////////////////////////////////////////////////////////////////////////////
public:
	BOOL			IsCreate();
	BOOL			Is64Bits();
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual	UINT8	ReadUINT8();
	virtual	UINT16	ReadUINT16();
	virtual	UINT32	ReadUINT24();
	virtual	UINT32	ReadUINT32();
	virtual	UINT64	ReadUINT64();
	virtual	UINT64	ReadBytes(BYTE* pData,UINT64 nData);
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual	UINT8	WriteUINT8(UINT8 nData);
	virtual	UINT16	WriteUINT16(UINT16 nData);
	virtual	UINT32	WriteUINT24(UINT32 nData);
	virtual	UINT32	WriteUINT32(UINT32 nData);
	virtual	UINT64	WriteUINT64(UINT64 nData);
	virtual	UINT64	WriteBytes(BYTE* pData,UINT64 nData);
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual	UINT64	SkipBytes(UINT64 nData);
///////////////////////////////////////////////////////////////////////////////
protected:
typedef	struct	_FILE_SYSTEM_
{
	BOOL		m_bInit;
	ZFILE*		m_hFile;
	FILEOPEN	m_fOpen;
	FILEREAD	m_fRead;
	FILEWRITE	m_fWrite;
	FILECLOSE	m_fClose;
}FILE_SYSTEM;
///////////////////////////////////////////////////////////////////////////////
protected:
	FILE_SYSTEM		m_MediaFileSystem;
///////////////////////////////////////////////////////////////////////////////
public:
	STATIC	FILE_SYSTEM		g_FileSystem;
///////////////////////////////////////////////////////////////////////////////
public:
	STATIC	VOID	SetMediaFileSystem(FILEOPEN fopen,FILEREAD fread,FILEWRITE fwrite,FILECLOSE fclose);
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
protected:
	BOOL			m_bIsCreate;
	BOOL			m_bIs64Bits;
///////////////////////////////////////////////////////////////////////////////
protected:
	ZOSFile			m_MediaFile;
///////////////////////////////////////////////////////////////////////////////
protected:
	UINT64			m_nTime;
	UINT64			m_nDuration;
	UINT32			m_nTimeScale;
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
#endif	//_ZTSFILE_H_
///////////////////////////////////////////////////////////////////////////////
