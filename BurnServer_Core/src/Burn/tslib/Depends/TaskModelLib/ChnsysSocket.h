#ifndef _CHNSYSSOCKET_H_
#define _CHNSYSSOCKET_H_

#include "ChnsysTypes.h"

/**
 *
 * @TCP Server
 * OS_TCPSOCKET_CreateInstance
 * OS_TCPSOCKET_Create
 * OS_SOCKET_Bind
 * OS_TCPSOCKET_Listen
 * OS_TCPSOCKET_Accept
 * OS_TCPSOCKET_Send/OS_TCPSOCKET_Recv
 * (read-block)OS_TCPSOCKET_StreamCreate    OS_TCPSOCKET_StreamRead/OS_TCPSOCKET_StreamWrite
 * OS_TCPSOCKET_Close
 * OS_TCPSOCKET_DestroyInstance
 *
 * @TCP Client
 * OS_TCPSOCKET_CreateInstance
 * OS_TCPSOCKET_Create
 * (block-mode)OS_TCPSOCKET_Connect
 * (unblock-mode)OS_SOCKET_SetNonBlocking OS_TCPSOCKET_Connect OS_TCPSOCKET_ConnectAble
 * OS_TCPSOCKET_Send/OS_TCPSOCKET_Recv
 * (read-block)OS_TCPSOCKET_StreamCreate    OS_TCPSOCKET_StreamRead/OS_TCPSOCKET_StreamWrite
 * OS_TCPSOCKET_Close
 * OS_TCPSOCKET_DestroyInstance
 *
 * @UDP Server
 * OS_UDPSOCKET_CreateInstance
 * OS_UDPSOCKET_Create
 * OS_SOCKET_Bind
 * OS_UDPSOCKET_RecvFrom
 * OS_UDPSOCKET_SendTo
 * OS_UDPSOCKET_Close
 * OS_UDPSOCKET_DestroyInstance
 * 
 * @UDP Client
 * OS_UDPSOCKET_CreateInstance
 * OS_UDPSOCKET_Create
 * OS_UDPSOCKET_SendTo
 * OS_UDPSOCKET_Close
 * OS_UDPSOCKET_DestroyInstance
 *
 * @other use
 * OS_SOCKET_GetLowerSocket
 */

typedef VOID *OS_SOCKET_HANDLE;
typedef VOID *OS_UDPSOCKET_HANDLE;
typedef VOID *OS_TCPSOCKET_HANDLE;
typedef VOID *OS_TCPLISTENERSOCKET_HANDLE;
typedef VOID *OS_TCPLISTENERCATCHER_HANDLE;

VOID OS_SOCKET_Init();
VOID OS_SOCKET_Uninit();

OS_UDPSOCKET_HANDLE OS_UDPSOCKET_CreateInstance();
VOID OS_UDPSOCKET_DestroyInstance(OS_UDPSOCKET_HANDLE hOSUdpSocket);

// nAddrFamily = 2  AF_INET
// nAddrFamily = 1  AF_UNIX
CHNSYS_BOOL OS_UDPSOCKET_Create(OS_UDPSOCKET_HANDLE hOSUdpSocket, CHNSYS_INT nAddrFamily = 2);
CHNSYS_BOOL OS_UDPSOCKET_Close(OS_UDPSOCKET_HANDLE hOSUdpSocket);
CHNSYS_INT OS_UDPSOCKET_SendTo(OS_UDPSOCKET_HANDLE hOSUdpSocket, CONST CHNSYS_CHAR* sData, CONST CHNSYS_INT nData, 
                    CHNSYS_UINT nRemoteAddr, CHNSYS_UINT nRemotePort);
CHNSYS_INT OS_UDPSOCKET_RecvFrom(OS_UDPSOCKET_HANDLE hOSUdpSocket, CHNSYS_CHAR* sData, CHNSYS_INT nData, 
                      CHNSYS_UINT *pRemoteAddr, CHNSYS_UINT *pRemotePort);
CHNSYS_BOOL OS_UDPSOCKET_GetRemoteAddr(OS_UDPSOCKET_HANDLE hOSUdpSocket, CHNSYS_UINT *pRemoteAddr, CHNSYS_UINT *pRemotePort);
CHNSYS_BOOL OS_UDPSOCKET_JoinMulticast(OS_UDPSOCKET_HANDLE hOSUdpSocket, CHNSYS_UINT nRemoteAddr);
CHNSYS_BOOL OS_UDPSOCKET_LeaveMulticast(OS_UDPSOCKET_HANDLE hOSUdpSocket, CHNSYS_UINT nRemoteAddr);
CHNSYS_BOOL OS_UDPSOCKET_SetMulticastInterface(OS_UDPSOCKET_HANDLE hOSUdpSocket, CHNSYS_UINT nLocalAddr);
CHNSYS_BOOL OS_UDPSOCKET_SetMulticastTTL(OS_UDPSOCKET_HANDLE hOSUdpSocket, CHNSYS_UINT nTTL);

CHNSYS_BOOL OS_SOCKET_Bind(OS_SOCKET_HANDLE hOSSocket, CHNSYS_UINT nAddr, CHNSYS_UINT nPort);
CHNSYS_BOOL OS_SOCKET_SetNonBlocking(OS_SOCKET_HANDLE hOSSocket, CHNSYS_BOOL bNonBlocking);
CHNSYS_BOOL OS_SOCKET_SetReuseAddr(OS_SOCKET_HANDLE hOSSocket, CHNSYS_BOOL bReuseAddr);
CHNSYS_BOOL OS_SOCKET_SetSendBufferSize(OS_SOCKET_HANDLE hOSSocket, CHNSYS_INT nBufferSize);
CHNSYS_BOOL OS_SOCKET_SetRecvBufferSize(OS_SOCKET_HANDLE hOSSocket, CHNSYS_INT nBufferSize);
CHNSYS_BOOL OS_SOCKET_SetTimeout(OS_SOCKET_HANDLE hOSSocket, CHNSYS_INT nMilliSecSend, CHNSYS_INT nMilliSecRecv);
CHNSYS_UINT OS_SOCKET_ConvertAddrToUINT(CONST CHNSYS_CHAR *sAddr);
CHNSYS_CHAR* OS_SOCKET_ConvertAddrToSTRING(CHNSYS_UINT nAddr);
CHNSYS_INT  OS_SOCKET_GetLowSocket(OS_SOCKET_HANDLE hOSSocket);
CHNSYS_BOOL OS_TCPSOCKET_SetNoDelay(OS_SOCKET_HANDLE hOSSocket, CHNSYS_BOOL bNoDelay);
CHNSYS_BOOL OS_TCPSOCKET_SetKeepAlive(OS_SOCKET_HANDLE hOSSocket, CHNSYS_BOOL bKeepAlive);

OS_TCPSOCKET_HANDLE OS_TCPSOCKET_CreateInstance();
VOID OS_TCPSOCKET_DestroyInstance(OS_TCPSOCKET_HANDLE hOSTcpSocket);
CHNSYS_BOOL OS_TCPSOCKET_Create(OS_TCPSOCKET_HANDLE hOSTcpSocket, CHNSYS_INT nAddrFamily = 2);
CHNSYS_BOOL OS_TCPSOCKET_Close(OS_TCPSOCKET_HANDLE hOSTcpSocket);
CHNSYS_BOOL OS_TCPSOCKET_Listen(OS_TCPSOCKET_HANDLE hOSTcpSocket, CHNSYS_UINT nListenCount);
CHNSYS_BOOL OS_TCPSOCKET_Accept(OS_TCPSOCKET_HANDLE hOSTcpSocket, CHNSYS_INT *phSocket, 
                     CHNSYS_UINT *pRemoteAddr, CHNSYS_UINT *pRemotePort);
CHNSYS_BOOL OS_TCPSOCKET_Connect(OS_TCPSOCKET_HANDLE hOSTcpSocket, CHNSYS_UINT nAddr, CHNSYS_UINT nPort);
CHNSYS_BOOL OS_TCPSOCKET_ConnectAble(OS_TCPSOCKET_HANDLE hOSTcpSocket, CHNSYS_UINT nMilliSecond);
CHNSYS_BOOL OS_TCPSOCKET_Attach(OS_TCPSOCKET_HANDLE hOSTcpSocket, CHNSYS_INT hSocket, CHNSYS_UINT nRemoteAddr, CHNSYS_UINT nRemotePort);
CHNSYS_BOOL OS_TCPSOCKET_Detach(OS_TCPSOCKET_HANDLE hOSTcpSocket);
CHNSYS_INT OS_TCPSOCKET_Send(OS_TCPSOCKET_HANDLE hOSTcpSocket, CONST CHNSYS_CHAR *sData, CONST CHNSYS_INT nData);
CHNSYS_INT OS_TCPSOCKET_Recv(OS_TCPSOCKET_HANDLE hOSTcpSocket, CHNSYS_CHAR *sData, CONST CHNSYS_INT nData);
CHNSYS_BOOL OS_TCPSOCKET_GetRemoteAddr(OS_TCPSOCKET_HANDLE hOSTcpSocket, CHNSYS_UINT *pRemoteAddr, CHNSYS_UINT *pRemotePort);
CHNSYS_BOOL OS_TCPSOCKET_StreamCreate(OS_TCPSOCKET_HANDLE hOSTcpSocket);
CHNSYS_BOOL OS_TCPSOCKET_StreamClose(OS_TCPSOCKET_HANDLE hOSTcpSocket);
CHNSYS_INT OS_TCPSOCKET_StreamRead(OS_TCPSOCKET_HANDLE hOSTcpSocket, CHNSYS_CHAR *sData, CHNSYS_INT nData);
CHNSYS_INT OS_TCPSOCKET_StreamWrite(OS_TCPSOCKET_HANDLE hOSTcpSocket, CONST CHNSYS_CHAR *sData, CHNSYS_INT nData);
CHNSYS_BOOL OS_TCPSOCKET_StreamReadable(OS_TCPSOCKET_HANDLE hOSTcpSocket);
CHNSYS_BOOL OS_TCPSOCKET_StreamWriteable(OS_TCPSOCKET_HANDLE hOSTcpSocket);
CHNSYS_BOOL OS_TCPSOCKET_StreamError(OS_TCPSOCKET_HANDLE hOSTcpSocket);

//////////////////////////////////////////////////////////////////////////
// tcp with task use
OS_TCPLISTENERSOCKET_HANDLE OS_TCPLISTENERSOCKET_CreateInstance();
VOID OS_TCPLISTENERSOCKET_DestroyInstance(OS_TCPLISTENERSOCKET_HANDLE hOSTcpListenerSocket);

typedef CHNSYS_BOOL (*OS_TCPLISTENERSOCKET_CallBackFunc)(CHNSYS_INT hAccept, CHNSYS_UINT nLocalAddr, CHNSYS_UINT nLocalPort,
                                               CHNSYS_UINT nRemoteAddr, CHNSYS_UINT nRemotePort, VOID *pContext);
CHNSYS_BOOL OS_TCPLISTENERSOCKET_Create(OS_TCPLISTENERSOCKET_HANDLE hOSTcpListenerSocket, OS_TCPLISTENERSOCKET_CallBackFunc cbf, 
                             VOID *pContext, CHNSYS_UINT nAddr, CHNSYS_UINT nPort);
CHNSYS_BOOL OS_TCPLISTENERSOCKET_Close(OS_TCPLISTENERSOCKET_HANDLE hOSTcpListenerSocket);

#endif //_CHNSYSSOCKET_H_
