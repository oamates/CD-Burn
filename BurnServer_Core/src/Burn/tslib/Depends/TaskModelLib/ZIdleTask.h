///////////////////////////////////////////////////////////////////////////////
/******************************************************************************
	Project		ZMediaServer
	ZIdleTask	Header File
	Create		20100617		ZHAOTT
	Modify		20110621		ZHAOTT
******************************************************************************/
///////////////////////////////////////////////////////////////////////////////
#ifndef	_ZIDLETASK_H_
#define	_ZIDLETASK_H_
///////////////////////////////////////////////////////////////////////////////
#include "Common.h"
#include "ZTask.h"
#include "ZOSHeap.h"
#include "ZOSMutex.h"
#include "ZOSCond.h"
///////////////////////////////////////////////////////////////////////////////
class	ZIdleTask;
class	ZIdleTaskThread;
///////////////////////////////////////////////////////////////////////////////
class	ZIdleTask : public ZTask
{
///////////////////////////////////////////////////////////////////////////////
public:
	ZIdleTask(CONST CHAR* sTaskName);
	virtual ~ZIdleTask();
///////////////////////////////////////////////////////////////////////////////
public:
	static	void	Initialize();
	static	void	Uninitialize();
	static	void	StartIdleTaskThread();
	static	void	StopIdleTaskThread();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	AddIdleTask(int nMSec);
	virtual	BOOL	RemoveIdleTask();
///////////////////////////////////////////////////////////////////////////////
private:
	ZOSHeapElement				m_IdleOSHeapElement;
///////////////////////////////////////////////////////////////////////////////
private:
	static	ZIdleTaskThread*	m_pIdleTaskThread;
///////////////////////////////////////////////////////////////////////////////
public:
	friend	class	ZIdleTaskThread;
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
class	ZIdleTaskThread : public ZOSThread
{
///////////////////////////////////////////////////////////////////////////////
public:
	ZIdleTaskThread();
	virtual	~ZIdleTaskThread();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL Start();
	virtual	BOOL Stop(BOOL bWait = TRUE);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	AddIdleTask(ZIdleTask* pTask,int nMSec);
	virtual	BOOL	RemoveIdleTask(ZIdleTask* pTask);
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual BOOL	OnThreadStart();
	virtual BOOL	OnThreadEntry();
	virtual BOOL	OnThreadStop();
///////////////////////////////////////////////////////////////////////////////
protected:
	ZOSHeap		m_IdleTaskHeap;
	ZOSMutex	m_IdleTaskMutes;
	ZOSCond		m_IdleTaskCond;
	UINT64		m_IdleTaskTime;
///////////////////////////////////////////////////////////////////////////////
public:
	friend	class	ZIdleTask;
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
#endif	//_ZIDLETASK_H_
///////////////////////////////////////////////////////////////////////////////
