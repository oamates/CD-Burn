///////////////////////////////////////////////////////////////////////////////
/******************************************************************************
	Project				ZMediaServer
	ZDataPin			Header File
	Create				20100713		ZHAOTT
	Modify				20110614		ZHAOTT
	Modify				20110624		ZHAOTT
******************************************************************************/
///////////////////////////////////////////////////////////////////////////////
#ifndef	_ZDATAPIN_H_
#define	_ZDATAPIN_H_
///////////////////////////////////////////////////////////////////////////////
#include "Common.h"
#include "ZOSMutex.h"
#include "ZOSArray.h"
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class	ZDataPin;
class	ZDataIn;
class	ZDataOut;
class	ZDataInOut;
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
/******************************************************************************
*		FLAG		COMMAND/DATA			LENGTH
*
*
******************************************************************************/
#define	DEFAULT_COMMAND_CREATE	1
#define	DEFAULT_COMMAND_CLOSE	2
#define	DEFAULT_COMMAND_START	3
#define	DEFAULT_COMMAND_STOP	4
#define	DEFAULT_COMMAND_ERROR	5
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class ZDataPin
{
public:
	virtual ~ZDataPin() = 0;
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	AttachePin(ZDataPin* pPin)	= 0;
	virtual	BOOL	DetachePin(ZDataPin* pPin)	= 0;
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	OnCommand(int nCommand)									= 0;
	virtual	BOOL	OnHeader(int nFlag,void* pHeader,int nHeader)			= 0;
	virtual	BOOL	OnData(int nFlag,void* pData,int nData)					= 0;
    virtual BOOL    OnUserData(int nFlag,void *pData)                       = 0;
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
typedef	ZOSArray<ZDataPin*>	ZDataPinArray;
///////////////////////////////////////////////////////////////////////////////
class ZDataIn : public ZDataPin
{
///////////////////////////////////////////////////////////////////////////////
public:
	ZDataIn();
	virtual	~ZDataIn();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	AttachePin(ZDataPin* pPin);
	virtual	BOOL	DetachePin(ZDataPin* pPin);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	OnCommand(int nCommand);
	virtual	BOOL	OnHeader(int nFlag,void* pHeader,int nHeader);
	virtual	BOOL	OnData(int nFlag,void* pData,int nData);
    virtual BOOL    OnUserData(int nFlag,void *pData);
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual	BOOL	SetDataPin(ZDataOut* pDataInPin = NULL);
///////////////////////////////////////////////////////////////////////////////
public:
	ZOSMutex		m_DataInMutex;
	ZDataPin*		m_pDataInPin;
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
class ZDataOut : public ZDataPin
{
///////////////////////////////////////////////////////////////////////////////
public:
	ZDataOut();
	virtual	~ZDataOut();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	AttachePin(ZDataPin* pPin);
	virtual	BOOL	DetachePin(ZDataPin* pPin);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	OnCommand(int nCommand);
	virtual	BOOL	OnHeader(int nFlag,void* pHeader,int nHeader);
	virtual	BOOL	OnData(int nFlag,void* pData,int nData);
    virtual BOOL    OnUserData(int nFlag,void *pData);
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual	BOOL	SendCommand(int nCommand);
	virtual	BOOL	SendHeader(int nFlag,void* pHeader,int nHeader);
	virtual	BOOL	SendData(int nFlag,void* pData,int nData);
    virtual BOOL    SendUserData(int nFlag, void *pData);
///////////////////////////////////////////////////////////////////////////////
public:
	ZOSMutex		m_DataOutMutex;
	ZDataPinArray	m_DataOutArray;
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
class ZDataInOut : public ZDataPin
{
///////////////////////////////////////////////////////////////////////////////
public:
	ZDataInOut(ZDataOut* pDataPin = NULL);
	virtual	~ZDataInOut();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	AttachePin(ZDataPin* pPin);
	virtual	BOOL	DetachePin(ZDataPin* pPin);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	OnCommand(int nCommand);
	virtual	BOOL	OnHeader(int nFlag,void* pHeader,int nHeader);
	virtual	BOOL	OnData(int nFlag,void* pData,int nData);
    virtual BOOL    OnUserData(int nFlag,void *pData);
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual	BOOL	SendCommand(int nCommand);
	virtual	BOOL	SendHeader(int nFlag,void* pHeader,int nHeader);
	virtual	BOOL	SendData(int nFlag,void* pData,int nData);
    virtual BOOL    SendUserData(int nFlag, void *pData);
///////////////////////////////////////////////////////////////////////////////
protected:
	virtual	BOOL	SetDataPin(ZDataOut* pDataInPin = NULL);
///////////////////////////////////////////////////////////////////////////////
public:
	int	GetDataOutArraySize();
///////////////////////////////////////////////////////////////////////////////
public:
	ZOSMutex		m_DataInOutMutex;
	ZDataPin*		m_pDataInPin;
	ZDataPinArray	m_DataOutArray;
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
#endif	//_ZDATAPIN_H_
///////////////////////////////////////////////////////////////////////////////
