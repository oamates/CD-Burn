///////////////////////////////////////////////////////////////////////////////
/******************************************************************************
	Project		ZMediaServer
	ZTCPSocket	Header File
	Create		20100611		ZHAOTT
******************************************************************************/
///////////////////////////////////////////////////////////////////////////////
#ifndef	_ZTCPSOCKET_H_
#define	_ZTCPSOCKET_H_
///////////////////////////////////////////////////////////////////////////////
#include "ZSocket.h"
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
class	ZTCPSocket :  public ZSocket
///////////////////////////////////////////////////////////////////////////////
{
///////////////////////////////////////////////////////////////////////////////
public:
	ZTCPSocket(ZTask* pTask = NULL);
	virtual ~ZTCPSocket();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	Create(INT nAddrFamily = AF_INET);
	virtual	BOOL	Close();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	Connect(UINT nAddr = 0,UINT nPort = 0);
	virtual BOOL	ConnectAble(UINT nUsecond);
	virtual	BOOL	Attach(const int hSocket,const struct sockaddr_in* RemoteAddr);
	virtual	BOOL	Detach();
    virtual	BOOL	Listen(UINT nListenCount);
    virtual int     Accept(UINT *pRemoteAddr, UINT *pRemotePort);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	int		Send(const void* sdata,const int ndata,int* nSend = NULL);
	virtual	int		Recv(void* sdata,const int ndata,int* nRead = NULL);
///////////////////////////////////////////////////////////////////////////////
public:
	BOOL			GetRemoteAddr(UINT* RemoteAddr,UINT* RemotePort);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	int		StreamCreate();
	virtual	int		StreamClose();
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	int		StreamRead(char* sdata,int ndata);
	virtual	int		StreamWrite(const char* sdata,int ndata);
///////////////////////////////////////////////////////////////////////////////
public:
	virtual	BOOL	StreamReadable();
	virtual	BOOL	StreamWriteable();
	virtual BOOL	StreamError();
///////////////////////////////////////////////////////////////////////////////
protected:
	struct	sockaddr_in	m_RemoteAddr;
	BOOL				m_bRemoteAddr;
	BOOL				m_bStreamSocket;
///////////////////////////////////////////////////////////////////////////////
public:
	static	int		TCPSend(int nSocket,const void* sdata,const int ndata);
	static	int		TCPRecv(int nSocket,const void* sdata,const int ndata);
	static	int		TCPClose(int nSocket);
///////////////////////////////////////////////////////////////////////////////
};
///////////////////////////////////////////////////////////////////////////////
#endif	//_ZTCPSOCKET_H_
///////////////////////////////////////////////////////////////////////////////
