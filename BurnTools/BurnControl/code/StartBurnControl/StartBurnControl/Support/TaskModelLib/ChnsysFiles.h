#ifndef _CHNSYSFILES_H_
#define _CHNSYSFILES_H_

#include "ChnsysTypes.h"

typedef VOID *OS_FILE_HANDLE;

OS_FILE_HANDLE OS_FILE_CreateInstance();
VOID OS_FILE_DestroyInstance(OS_FILE_HANDLE hHandle);
CHNSYS_BOOL OS_FILE_IsOpen(OS_FILE_HANDLE hHandle);
CHNSYS_BOOL OS_FILE_IsDir(OS_FILE_HANDLE hHandle);
CHNSYS_BOOL OS_FILE_IsReadOnly(OS_FILE_HANDLE hHandle);
CHNSYS_BOOL OS_FILE_IsReadable(OS_FILE_HANDLE hHandle);
CHNSYS_BOOL OS_FILE_IsWriteable(OS_FILE_HANDLE hHandle);
CHNSYS_BOOL OS_FILE_Open(OS_FILE_HANDLE hHandle, CONST CHNSYS_CHAR* sName, CHNSYS_BOOL bReadOnly = TRUE, CHNSYS_BOOL bAppend = FALSE);
CHNSYS_BOOL OS_FILE_Create(OS_FILE_HANDLE hHandle, CONST CHNSYS_CHAR* sName, CHNSYS_BOOL bCreateNew = TRUE);
CHNSYS_BOOL OS_FILE_Close(OS_FILE_HANDLE hHandle);
CHNSYS_INT OS_FILE_Read(OS_FILE_HANDLE hHandle, CHNSYS_CHAR* sdata, CHNSYS_INT ndata);
CHNSYS_INT OS_FILE_Write(OS_FILE_HANDLE hHandle, CONST CHNSYS_CHAR* sdata, CHNSYS_INT ndata);
CHNSYS_INT OS_FILE_Seek(OS_FILE_HANDLE hHandle, CHNSYS_UINT64 nPos);
CHNSYS_INT OS_FILE_GetHandle(OS_FILE_HANDLE hHandle);
CHNSYS_CHAR* OS_FILE_GetPath(OS_FILE_HANDLE hHandle);
CHNSYS_UINT64 OS_FILE_GetPosition(OS_FILE_HANDLE hHandle);
CHNSYS_UINT64 OS_FILE_SetPosition(OS_FILE_HANDLE hHandle, CHNSYS_UINT64 nPos);
CHNSYS_UINT64 OS_FILE_GetSize(OS_FILE_HANDLE hHandle);

//typedef VOID *OS_XMLPARSER_HANDLE;
//OS_XMLPARSER_HANDLE OS_XMLPARSER_CreateInstance();
//VOID OS_XMLPARSER_DestroyInstance(OS_XMLPARSER_HANDLE hXMLParser);


#endif //_CHNSYSFILES_H_
